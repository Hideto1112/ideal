/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2021-05-17 02:41:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import controller.*;
import model.*;

public final class courseInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("controller");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("<!--\r\n");
      out.write("table {\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("caption {\r\n");
      out.write("\tcolor: #006799;\r\n");
      out.write("\tfont-size: 18pt;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\tbackground: #006799;\r\n");
      out.write("\tcolor: #C8EDFF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\tbackground: #C8EDFF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th#bottom {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("<!--\r\n");
      out.write("\tfunction dataCheck(obj) {\r\n");
      out.write("\t\tvar msg = \"\";\r\n");
      out.write("\t\tif (obj.courseName.value.length < 1) {\r\n");
      out.write("\t\t\tmsg += \"コース名を入力してください。\\n\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!obj.price.value.match(/^[0-9]+$/g)) {\r\n");
      out.write("\t\t\tmsg += \"価格を数値で入力してください。\\n\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar i;\r\n");
      out.write("\t\tfor (i = 0; i < obj.orderFlg.length; i++) {\r\n");
      out.write("\t\t\tif (obj.orderFlg[i].checked)\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (i >= obj.orderFlg.length) {\r\n");
      out.write("\t\t\tmsg += \"オーダーの可否をチェックしてください\\n\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (msg.length > 0) {\r\n");
      out.write("\t\t\talert(msg);\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

System.out.println("course insert.jsp start");
		int typeId;
		try {
			typeId = Integer.parseInt(request.getParameter("typeId"));
		} catch (NumberFormatException e) {
			typeId = 100;
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');

		request.setCharacterEncoding("UTF-8");
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      model.Admin adminInfo = null;
      synchronized (session) {
        adminInfo = (model.Admin) _jspx_page_context.getAttribute("adminInfo", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (adminInfo == null){
          adminInfo = new model.Admin();
          _jspx_page_context.setAttribute("adminInfo", adminInfo, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      out.write('	');

		IdealException msg = (IdealException) request.getAttribute("msg");
		if (msg != null) {
	
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t");
      out.print(msg.getMsg());
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      java.util.ArrayList typeMenuList = null;
      typeMenuList = (java.util.ArrayList) _jspx_page_context.getAttribute("typeMenuList", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (typeMenuList == null){
        typeMenuList = new java.util.ArrayList();
        _jspx_page_context.setAttribute("typeMenuList", typeMenuList, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('	');
      java.util.ArrayList oneCourse = null;
      oneCourse = (java.util.ArrayList) _jspx_page_context.getAttribute("oneCourse", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (oneCourse == null){
        oneCourse = new java.util.ArrayList();
        _jspx_page_context.setAttribute("oneCourse", oneCourse, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table boder>\r\n");
      out.write("\t\t<form action=\"CourseOperationSvl\" method=\"post\"\r\n");
      out.write("\t\t\tonSubmit=\"return dataCheck(this);\">\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<caption>新しいコースを追加</caption>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>コース名</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"courseName\" size=\"30\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t<th>価格</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"price\" size=\"6\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>オーダー可</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"radio\" name=\"orderFlg\" value=\"1\" />可 <input\r\n");
      out.write("\t\t\t\t\ttype=\"radio\" name=\"orderFlg\" value=\"0\" />不可</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>コメント</th>\r\n");
      out.write("\t\t\t\t<td><textarea name=\"detail\" rows=\"4\" cols=\"30\"></textarea></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>前菜</th>\r\n");
      out.write("\t\t\t\t<td><select name=\"appetizerId\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0\"></option>\r\n");
      out.write("\t\t\t\t\t\t");

							for (Object o : typeMenuList) {
								Menu m = (Menu) o;
								String selected = "";
								if (typeId == m.getTypeId()) {
									selected = "selected";
								} else {
									selected = "";
								}
							if (((Menu) o).getTypeId() == Course.COURSE_MENU_TYPE_ID[0]) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(((Menu) o).getMenuId());
      out.write('"');
      out.write(' ');
      out.print(selected);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(((Menu) o).getMenuName());
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t");

							}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>スープ</th>\r\n");
      out.write("\t\t\t\t<td><select name=\"soupId\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0\"></option>\r\n");
      out.write("\t\t\t\t\t\t");

							for (Object o : typeMenuList) {
								Menu m = (Menu) o;
								String selected = "";
								if (typeId == m.getTypeId()) {
									selected = "selected";
								} else {
									selected = "";
								}
							if (((Menu) o).getTypeId() == Course.COURSE_MENU_TYPE_ID[1]) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(((Menu) o).getMenuId());
      out.write('"');
      out.write(' ');
      out.print(selected);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(((Menu) o).getMenuName());
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t");

							}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>パスタ</th>\r\n");
      out.write("\t\t\t\t<td><select name=\"pastaId\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0\"></option>\r\n");
      out.write("\t\t\t\t\t\t");

							for (Object o : typeMenuList) {
								Menu m = (Menu) o;
								String selected = "";
								if (typeId == m.getTypeId()) {
									selected = "selected";
								} else {
									selected = "";
								}
							if (((Menu) o).getTypeId() == Course.COURSE_MENU_TYPE_ID[2]) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(((Menu) o).getMenuId());
      out.write('"');
      out.write(' ');
      out.print(selected);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(((Menu) o).getMenuName());
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t");

							}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>肉料理</th>\r\n");
      out.write("\t\t\t\t<td><select name=\"meatId\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0\"></option>\r\n");
      out.write("\t\t\t\t\t\t");

							for (Object o : typeMenuList) {
								Menu m = (Menu) o;
								String selected = "";
								if (typeId == m.getTypeId()) {
									selected = "selected";
								} else {
									selected = "";
								}
							if (((Menu) o).getTypeId() == Course.COURSE_MENU_TYPE_ID[3]) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(((Menu) o).getMenuId());
      out.write('"');
      out.write(' ');
      out.print(selected);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(((Menu) o).getMenuName());
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t");

							}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>魚料理</th>\r\n");
      out.write("\t\t\t\t<td><select name=\"fishId\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0\"></option>\r\n");
      out.write("\t\t\t\t\t\t");

							for (Object o : typeMenuList) {
								Menu m = (Menu) o;
								String selected = "";
								if (typeId == m.getTypeId()) {
									selected = "selected";
								} else {
									selected = "";
								}
							if (((Menu) o).getTypeId() == Course.COURSE_MENU_TYPE_ID[4]) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(((Menu) o).getMenuId());
      out.write('"');
      out.write(' ');
      out.print(selected);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(((Menu) o).getMenuName());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t");

							}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>デザート</th>\r\n");
      out.write("\t\t\t\t<td><select name=\"desserId\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0\"></option>\r\n");
      out.write("\t\t\t\t\t\t");

							for (Object o : typeMenuList) {
								Menu m = (Menu) o;
								String selected = "";
								if (typeId == m.getTypeId()) {
									selected = "selected";
								} else {
									selected = "";
								}
							if (((Menu) o).getTypeId() == Course.COURSE_MENU_TYPE_ID[5]) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(((Menu) o).getMenuId());
      out.write('"');
      out.write(' ');
      out.print(selected);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(((Menu) o).getMenuName());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t");

							}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"mode\"\r\n");
      out.write("\t\t\t\tvalue=\"");
      out.print(CourseOperationSvl.INSERT);
      out.write("\" />\r\n");
      out.write("\t\t\t\t<input type=\"hidden\"name=\"typeId\" value=\"100\" />\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th colspan=\"2\" id=\"bottom\"><input type=\"submit\"\r\n");
      out.write("\t\t\t\t\tvalue=\"コースをを追加\" /></th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<a href=\"MenuMaintenanceSvl?typeId=");
      out.print(typeId);
      out.write("\">一覧表示画面へ戻る</a>\r\n");
      out.write("\t</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
