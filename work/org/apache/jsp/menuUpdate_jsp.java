/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2021-05-07 00:43:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import controller.*;
import model.*;

public final class menuUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	static String fmtNull(String s){
		if(s == null || s.equals("")){
			s = "&nbsp";
		}
		return s;

	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/incFile.jsp", Long.valueOf(1619838047794L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("controller");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title>Menu Update</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("<!--\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-image: url(./img/背景.jpg);\r\n");
      out.write("\tbackground-repeat: no-repeat;\r\n");
      out.write("\tbackground-attachment: fixed;\r\n");
      out.write("\tbackground-size: cover;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("caption {\r\n");
      out.write("\tcolor: #0a0a0a;\r\n");
      out.write("\tfont-size: 20pt;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\tbackground: #006799;\r\n");
      out.write("\tcolor: #C8EDFF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\tbackground: #C8EDFF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th#bottom {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("\tcolor: #ffd700;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("<!--\r\n");
      out.write("\tfunction dataCheck(obj) {\r\n");
      out.write("\t\tvar msg = \"\"; //aleatボックスに表示する文字列を代入する変数を「\"\"」で初期化\r\n");
      out.write("\r\n");
      out.write("\t\tif (obj.menuName.value.length < 1) { //menuNameの文字列の長さが1未満の場合\r\n");
      out.write("\t\t\tmsg += \"メニュー名を入力してください。\\n\"; //msgに文字列を追加\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!obj.price.value.match(/^[0-9]+$/g)) { //priceが数値の連続ではない場合\r\n");
      out.write("\t\t\tmsg += \"価格を数値で入力してください。\\n\"; //msgに文字列を追加\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar i; //ラジオボタンのチェック判定\r\n");
      out.write("\t\tfor (i = 0; i < obj.orderFlg.length; i++) { //同名のラジオボタンは内部的に配列になっている\r\n");
      out.write("\t\t\tif (obj.orderFlg[i].checked)\r\n");
      out.write("\t\t\t\tbreak; //i番目の要素がチェックされていればループ終了\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (i >= obj.orderFlg.length) { //ループカウンターを評価し最後までループしていれば未チェック\r\n");
      out.write("\t\t\tmsg += \"オーダーの可否をチェックしてください。\\n\"; //\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (msg.length > 0) { //msg変数の長さを判定し文字が代入されている場合\r\n");
      out.write("\t\t\talert(msg); //alertボックスに内容を表示しfalseを返す\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else { //それ以外はtrueを返す\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("//-->\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');

		request.setCharacterEncoding("utf-8");
		int typeId;
		try {
			typeId = Integer.parseInt(request.getParameter("typeId"));
		} catch (NumberFormatException e) {
			typeId = 200;
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      model.Menu oneMenu = null;
      oneMenu = (model.Menu) _jspx_page_context.getAttribute("oneMenu", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (oneMenu == null){
        oneMenu = new model.Menu();
        _jspx_page_context.setAttribute("oneMenu", oneMenu, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('	');
      java.util.ArrayList mType = null;
      mType = (java.util.ArrayList) _jspx_page_context.getAttribute("mType", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (mType == null){
        mType = new java.util.ArrayList();
        _jspx_page_context.setAttribute("mType", mType, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\t<table border>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t<h1>メニューの更新</h1>\r\n");
      out.write("\t\t<form action=\"MenuOperationSvl\" method=\"post\"\r\n");
      out.write("\t\t\tonsubmit=\"return dataCheck(this);\">\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>メニュー名</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"menuName\" size=\"30\"\r\n");
      out.write("\t\t\t\t\tvalue='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getMenuName())));
      out.write("' /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>価格</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"price\" size=\"10\"\r\n");
      out.write("\t\t\t\t\tvalue='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getPrice())));
      out.write("' /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>オーダー可</th>\r\n");
      out.write("\t\t\t\t");

					String[] order = { "不可", "可" };
				
      out.write("\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i < order.length; i++) {
							String checked = "";
							if (oneMenu.getOrderFlg() == i) {
								checked = "checked";
							}
					
      out.write(" <input type=\"radio\" name=\"orderFlg\" value=\"");
      out.print(i);
      out.write('"');
      out.write(' ');
      out.print(checked);
      out.write(" />\r\n");
      out.write("\t\t\t\t\t");
      out.print(order[i]);
      out.write("&nbsp;&nbsp;&nbsp; ");

 	}
 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>分類</th>\r\n");
      out.write("\t\t\t\t<td><select name=\"typeId\">\r\n");
      out.write("\t\t\t\t\t\t");

							for (Object o : mType) {
								MenuType mt = (MenuType) o;
								String selected = "";

								if (typeId == mt.getTypeId()) {
									selected = "selected";
								} else {
									selected = "";
								}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(mt.getTypeId());
      out.write('"');
      out.write(' ');
      out.print(selected);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(((MenuType) o).getTypeName());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>コメント</th>\r\n");
      out.write("\t\t\t\t<td><textarea name=\"detail\" cols=\"30\" rows=\"4\">\r\n");
      out.print(fmtNull(oneMenu.getDetail()));
      out.write("</textarea></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"mode\" value=\"");
      out.print(MenuOperationSvl.UPDATE);
      out.write("\" />\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"menuId\"\r\n");
      out.write("\t\t\t\tvalue='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getMenuId())));
      out.write("' />\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"typeId\"\r\n");
      out.write("\t\t\t\tvalue='");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((model.Menu)_jspx_page_context.findAttribute("oneMenu")).getTypeId())));
      out.write("' />\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th colspan=\"2\" id=\"bottom\"><input type=\"submit\"\r\n");
      out.write("\t\t\t\t\tvalue=\"メニューを更新\" /></th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<a href=\"MenuMaintenanceSvl?typeId=");
      out.print( typeId );
      out.write("\">一覧表示画面へ戻る</a>\r\n");
      out.write("\t</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
