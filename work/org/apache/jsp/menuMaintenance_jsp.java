/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2021-05-17 01:25:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.*;
import controller.*;
import model.*;

public final class menuMaintenance_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	static String fmtNull(String s){
		if(s == null || s.equals("")){
			s = "&nbsp";
		}
		return s;

	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/incFile.jsp", Long.valueOf(1619838047794L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("controller");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title>Menu Maintenance</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("<!--\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-image: url(./img/背景.jpg);\r\n");
      out.write("\tbackground-repeat: no-repeat;\r\n");
      out.write("\tbackground-attachment: fixed;\r\n");
      out.write("\tbackground-size: cover;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("caption {\r\n");
      out.write("\tfont-size: 18pt;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr#data0 {\r\n");
      out.write("\tbackground: #E3FFE3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr#data1 {\r\n");
      out.write("\tbackground: #A4FFDB;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\tbackground: #007B66;\r\n");
      out.write("\tcolor: #ECFFF3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("\twhite-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#code {\r\n");
      out.write("\twidth: 40px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu {\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#price {\r\n");
      out.write("\twidth: 60px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding-right: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#comm {\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#ord {\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#btn {\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbackground: #007B66;\r\n");
      out.write("\tcolor: #ECFFF3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#type1 {\r\n");
      out.write("\twidth: 140px;\r\n");
      out.write("\tborder: solid gray 1px;\r\n");
      out.write("\tbackground: #E3FFE3;\r\n");
      out.write("\tcolor: #007B53;\r\n");
      out.write("\tpadding: 2px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmargin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#type2 {\r\n");
      out.write("\twidth: 140px;\r\n");
      out.write("\tborder: solid gray 1px;\r\n");
      out.write("\tbackground: #007B53;\r\n");
      out.write("\tcolor: #E3FFE3;\r\n");
      out.write("\tpadding: 2px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmargin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>=== メニューマスターメンテナンス ===</h1>\r\n");
      out.write("\r\n");
      out.write("\t");

		String[] order = { "不可", "可" };
		NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("ja",
				"JP"));
		int typeId;
		String style = "id = 'type1'";
		try {
			typeId = Integer.parseInt(request.getParameter("typeId"));
		} catch (NumberFormatException e) {
			typeId = 100;
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      java.util.ArrayList mType = null;
      mType = (java.util.ArrayList) _jspx_page_context.getAttribute("mType", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (mType == null){
        mType = new java.util.ArrayList();
        _jspx_page_context.setAttribute("mType", mType, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('	');
      java.util.ArrayList menu = null;
      menu = (java.util.ArrayList) _jspx_page_context.getAttribute("menu", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (menu == null){
        menu = new java.util.ArrayList();
        _jspx_page_context.setAttribute("menu", menu, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td id=\"outer\">\r\n");
      out.write("\t\t\t\t");

					for (int i = 0; i < mType.size(); i++) {
						MenuType mt = (MenuType) mType.get(i);
						if (typeId == mt.getTypeId()) {
							style = " id = 'type2'";
						} else {
							style = " id = 'type1'";
						}
				
      out.write("\r\n");
      out.write("\t\t\t\t<form name=\"frm");
      out.print(i);
      out.write("\" action=\"MenuMaintenanceSvl\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"typeId\" value=\"");
      out.print(mt.getTypeId());
      out.write("\"/>\r\n");
      out.write("\t\t\t\t\t<div ");
      out.print(style);
      out.write(" onclick=\"document.frm");
      out.print(i);
      out.write(".submit();\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(mt.getTypeName());
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</form> ");

 	}
 
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td id=\"outer\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<caption>\r\n");
      out.write("\t\t\t\t\t\t&lt;&lt;&lt;\r\n");
      out.write("\t\t\t\t\t\t");

							try {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(((Menu) menu.get(0)).getTypeName());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");

							} catch (Exception e) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\tメニューがありません。\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t&gt;&gt;&gt;\r\n");
      out.write("\t\t\t\t\t</caption>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th id=\"code\">ID</th>\r\n");
      out.write("\t\t\t\t\t\t<th id=\"menu\">メニュー</th>\r\n");
      out.write("\t\t\t\t\t\t<th id=\"price\">価格</th>\r\n");
      out.write("\t\t\t\t\t\t<th id=\"comm\">コメント</th>\r\n");
      out.write("\t\t\t\t\t\t<th id=\"ord\">オーダー可</th>\r\n");
      out.write("\t\t\t\t\t\t<th id=\"btn\" colspan=\"2\"></th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i < menu.size(); i++) {
							Menu m = (Menu) menu.get(i);
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr id=\"data");
      out.print(i % 2);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<td id=\"code\">");
      out.print(m.getMenuId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"menu\">");
      out.print(m.getMenuName());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"price\">");
      out.print(nf.format(m.getPrice()));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"comm\">");
      out.print(fmtNull(m.getDetail()));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"ord\">");
      out.print(order[m.getOrderFlg()]);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<form action=\"MenuUpdateSvl\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"submit\" value=\"更新\" />\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 隠しフィールド -->\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"mode\" /> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"menuId\" value=\"");
      out.print(m.getMenuId());
      out.write("\" /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"hidden\" name=\"typeId\" value=\"");
      out.print(typeId);
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t<form action=\"MenuDeleteSvl\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"submit\" value=\"削除\" />\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 隠しフィールド -->\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"mode\" /> <input type=\"hidden\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"menuId\" value=\"");
      out.print(m.getMenuId());
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t <input type=\"hidden\" name=\"typeId\" value=\"");
      out.print(typeId);
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<form action=\"MenuInsertSvl\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t\t<th colspan=\"7\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"typeId\"value=\"");
      out.print(typeId);
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"mode\"/>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"submit\"value=\"新しいメニューの追加\" />\r\n");
      out.write("\t\t\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<p id=\"boder\"><a href=\"adminIndex.jsp\">管理者処理選択に戻る</a></p>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
